name: Auto-update n8n on VPS

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Show current working directory
        run: pwd

      - name: Debug repo structure
        run: ls -al

      - name: Check n8n folder locally
        run: ls -al ./n8n

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add VPS to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Ensure n8n directory exists on VPS
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            mkdir -p /home/${{ secrets.VPS_USER }}/n8n
            chown $USER:$USER /home/${{ secrets.VPS_USER }}/n8n
          EOF

      - name: Sync n8n files to VPS
        run: |
          rsync -avz --delete --exclude '.git' -e "ssh -o StrictHostKeyChecking=no" \
            ./n8n/ ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/home/${{ secrets.VPS_USER }}/n8n/

      - name: Check files on VPS
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "ls -al /home/${{ secrets.VPS_USER }}/n8n"

      - name: Deploy n8n stack on VPS
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            set -e
            cd /home/${{ secrets.VPS_USER }}/n8n

            # Vérifie que docker-compose.yml existe
            if [ ! -f docker-compose.yml ]; then
              echo "Error: docker-compose.yml not found!"
              exit 1
            fi

            # Déploie via Docker Swarm
            docker compose -f docker-compose.yml pull || true
            docker stack deploy -c docker-compose.yml n8n --with-registry-auth
          EOF
