name: Auto-update n8n on VPS

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add VPS to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Check if n8n folder changed
        id: n8n_changes
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "n8n_changed=true" >> $GITHUB_OUTPUT
          else
            if [ "${{ github.event.before }}" = "0000000000000000000000000000000000000000" ]; then
              echo "n8n_changed=true" >> $GITHUB_OUTPUT
            else
              CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^n8n/' || true)
              if [ -n "$CHANGED" ]; then
                echo "n8n_changed=true" >> $GITHUB_OUTPUT
              else
                echo "n8n_changed=false" >> $GITHUB_OUTPUT
              fi
            fi
          fi

      - name: Sync n8n files to VPS
        if: steps.n8n_changes.outputs.n8n_changed == 'true'
        run: |
          rsync -avz --delete --exclude '.git' -e "ssh -o StrictHostKeyChecking=no" \
            ./n8n/ ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/home/${{ secrets.VPS_USER }}/n8n/

      - name: Rename stack file on VPS
        if: steps.n8n_changes.outputs.n8n_changed == 'true'
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
          set -e
          if [ -f /home/${{ secrets.VPS_USER }}/n8n/deploy-n8n.yml ]; then
            mv /home/${{ secrets.VPS_USER }}/n8n/deploy-n8n.yml /home/${{ secrets.VPS_USER }}/n8n/docker-compose.yml
          fi
          EOF

      - name: Deploy n8n stack on VPS
        if: steps.n8n_changes.outputs.n8n_changed == 'true'
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
          set -e

          # Crée les secrets si non existants
          if ! docker secret ls | grep -q n8n_basic_auth_password; then
            echo '${{ secrets.N8N_BASIC_AUTH_PASSWORD }}' | docker secret create n8n_basic_auth_password -
          fi
          #if ! docker secret ls | grep -q n8n_api_key; then
          #  echo '${{ secrets.N8N_API_KEY }}' | docker secret create n8n_api_key -
          #fi

          # Pull la dernière image Docker
          docker pull docker.n8n.io/n8nio/n8n:latest

          # Déploiement via Docker Swarm
          cd /home/${{ secrets.VPS_USER }}/n8n
          docker stack deploy -c docker-compose.yml n8n --with-registry-auth
          EOF
